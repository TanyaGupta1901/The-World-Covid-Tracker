{"version":3,"sources":["themes.js","components/GraphDemo.js","components/Map.js","components/TotalDeaths.js","components/Cards.js","components/Tabledemo.js","App.js","reportWebVitals.js","index.js"],"names":["darktheme","backgroundColor","backgroundImage","headerfontColor","fontSize","headerBackground","color","lightTheme","GlobalStyles","createGlobalStyle","props","theme","buildChartData","data","lastDatapoint","expdata","date","newData","x","y","push","GraphDemo","useState","setData","country","console","log","caseData","deathData","recoveredData","dataFactor","useEffect","a","url","fetch","then","res","json","fetchData","datasets","label","borderColor","fill","DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","ChangeMapView","coords","map","useMap","setView","lat","lng","getZoom","Marker","prototype","options","Map","countries","center","zoom","flagurl","countryInfo","flag","className","TileLayer","attribution","Circle","long","fillColor","fillOpacity","radius","active","position","Popup","src","alt","width","height","value","thousandSeparator","disabled","deaths","recovered","TotalDeaths","method","style","todayDeaths","iso2","Cards","textAlign","heading","count","Totaldemo","todayCases","StyledApp","styled","div","App","setTheme","datac","setDatac","mapCenter","setMapCenter","mapZoom","setmapZoom","list","setList","setCountry","selectedCountry","setSelectedCountry","graph","setGraph","setGraphData","onCountryChange","e","target","urlgraph","class","marginRight","type","onClick","cases","onChange","element","iso","margin","padding","href","faGithub","faLinkedin","faEnvelope","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fb023b6.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\r\n\r\nexport const darktheme = {\r\nbackgroundColor: \"#000000\",\r\nbackgroundImage: \"linear-gradient(147deg, #000000 0%, #012C48 74%)\",\r\nheaderfontColor : \"#012C48\",\r\nfontSize : \"50px\",\r\nheaderBackground : \"cyan\",\r\ncolor : \"cyan\"\r\n\r\n\r\n}\r\n\r\nexport const lightTheme = {\r\n    backgroundColor: \" #757f9a;\",\r\n    backgroundImage : \"linear-gradient(to right, #757f9a, #d7dde8);\",\r\n    headerfontColor : \"cyan\",\r\n    headerBackground : \"#012C48\",\r\n    \r\n    // fontSize : \"80px\"\r\n}\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\nhtml\r\n{\r\n    height : 100%;\r\n    background-size: cover;\r\n    \r\n}\r\nbody\r\n{   \r\n    background-color : ${props=>props.theme.backgroundColor};\r\n    background-image : ${props=>props.theme.backgroundImage};    \r\n    background-repeat : no-repeat;\r\n    background-attachment: fixed;\r\n    color : ${props=>props.theme.color};\r\n    \r\n    \r\n}\r\nheader\r\n{\r\n    background-color : ${props=>props.theme.headerBackground};\r\n    color : ${props=>props.theme.headerfontColor}\r\n}\r\nfooter\r\n{\r\n    background-color : ${props=>props.theme.headerBackground};\r\n    color : ${props=>props.theme.headerfontColor}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\n\r\nconst buildChartData = (data) => {\r\n    const expdata = [];\r\n    let lastDatapoint;\r\n    for (let date in data) {\r\n\r\n\r\n        if (lastDatapoint) {\r\n            let newData = {\r\n                x: date,\r\n                y: data[date] - lastDatapoint\r\n            }\r\n\r\n            expdata.push(newData);\r\n        }\r\n        lastDatapoint = data[date]\r\n    }\r\n    return expdata;\r\n}\r\n\r\n\r\nfunction GraphDemo(props) {\r\n\r\n    const [data, setData] = useState({});\r\n\r\n    const country = props.country\r\n    console.log(country)\r\n    console.log(props.data)\r\n     let dataFactor = \"timeline\" in props.data\r\n     let caseData,deathData,recoveredData\r\n     if(dataFactor)\r\n     {\r\n         console.log(dataFactor)\r\n         caseData = props.data['timeline']['cases']\r\n         deathData = props.data['timeline']['deaths']\r\n         recoveredData = props.data['timeline']['recovered']\r\n\r\n     }\r\n     else if(!dataFactor)\r\n     {\r\n        caseData = props.data['cases']\r\n        deathData = props.data['deaths']\r\n        recoveredData = props.data['recovered']\r\n     }\r\n\r\n     console.log(caseData,deathData,recoveredData)\r\n    // const data = (country==\"\"?props.data:props.data.timeline)\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const url = `https://disease.sh/v3/covid-19/historical/${country===\"\" ? \"all\" : country}?lastdays=120`\r\n            console.log(url)\r\n            await fetch(url)\r\n            .then((res)=>{res.json()})\r\n            .then((data)=>setData(data))\r\n\r\n        }\r\n\r\n        fetchData();\r\n    },[country])\r\n    return (\r\n        <Line\r\n\r\n            data={{\r\n                datasets: [{\r\n                    label: \"deaths\",\r\n                    backgroundColor: \"rgba(255,0,0, 0.2)\",\r\n                    borderColor: \"#ff0000\",\r\n                    data: buildChartData(deathData),\r\n                    fill : true\r\n                },\r\n                {\r\n                    label: \"recovered\",\r\n                    backgroundColor: \"rgba(0,255,0, 0.2)\",\r\n                    borderColor: \"#00ff00\",\r\n                    data: buildChartData(recoveredData),\r\n                    fill : true\r\n                },\r\n                {\r\n                    label: \"cases\",\r\n                    backgroundColor: \"rgba(0,0,255, 0.2)\",\r\n                    borderColor: \"#0000ff\",\r\n                    data: buildChartData(caseData),\r\n                    fill : true\r\n                }\r\n\r\n                ]\r\n            }}>\r\n\r\n        </Line>\r\n    )\r\n}\r\n\r\nexport default GraphDemo\r\n","import React from 'react'\r\nimport { MapContainer as LeafletMap, TileLayer, useMap, Marker, Popup ,Circle} from \"react-leaflet\";\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nlet DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nfunction ChangeMapView({ coords }) {\r\n\r\n    const map = useMap();\r\n    map.setView([coords.lat, coords.lng], map.getZoom());\r\n\r\n    return null;\r\n}\r\n\r\n\r\nfunction Map({ countries, center, zoom, data }) {\r\n    let flagurl = \"\";\r\n    if (\"countryInfo\" in data) {\r\n        flagurl = data.countryInfo.flag\r\n    }\r\n    return (\r\n        <div className=\"map\">\r\n            <LeafletMap center={center} zoom={zoom} >\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                />\r\n                <ChangeMapView coords={center} />\r\n\r\n                {countries.map((country) => (\r\n                    \r\n                    <Circle\r\n                        center={[country.countryInfo.lat, country.countryInfo.long]}\r\n                        color=\"red\"\r\n                        fillColor=\"{255,0,0}\"\r\n                        fillOpacity={0.5}\r\n                        radius={(country.active)/2}></Circle>\r\n                ))}\r\n\r\n                <Marker position={center}>\r\n                    <Popup className=\"popup\">\r\n                        {flagurl ? <img src={flagurl} alt=\"flag\" width=\"100px\" height=\"70px\"></img> : \"\"}\r\n                        <br></br>\r\n                        <span className=\"phead\">Country</span> : {flagurl ? data.country : \"Worldwide\"}\r\n                        <br></br>\r\n                        <span className=\"phead\">Active Cases</span> : <NumberFormat value={data.active} thousandSeparator={true} disabled={true}></NumberFormat>\r\n                        <br></br>\r\n                        <span className=\"phead\">Deaths</span> : <NumberFormat value={data.deaths} thousandSeparator={true} disabled={true}></NumberFormat>\r\n                        <br></br>\r\n                        <span className=\"phead\">Recovered Cases</span> : <NumberFormat value={data.recovered} thousandSeparator={true} disabled={true}></NumberFormat>\r\n                    </Popup>\r\n\r\n                </Marker>\r\n            </LeafletMap>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","import React,{useState,useEffect} from 'react'\r\n\r\nfunction TotalDeaths() {\r\n    const [data, setData] = useState([])\r\n    useEffect(() => {\r\n\r\n        fetch(\"https://disease.sh/v3/covid-19/countries?sort=todayDeaths\", {\r\n            method: \"GET\"\r\n        }).then(res => res.json()).then((data) => { setData(data) })\r\n    }, [])\r\n\r\n    // console.log(data)\r\n\r\n    return (\r\n        <div>\r\n            \r\n            {data.map((country) =>\r\n                <tr key={country.countryInfo.iso2}>\r\n                    <td><img src={country.countryInfo.flag} style={{height:\"10px\",width:\"14px\"}} alt=\"flags\"></img>  {country.country}</td>\r\n                    <td>{country.todayDeaths}</td></tr>\r\n            )\r\n            }\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default TotalDeaths\r\n","import React from 'react'\r\n\r\n\r\n\r\nfunction Cards(props) {\r\n\r\n    return (\r\n        <div className=\"cardStyling \">\r\n            <h2 style={{textAlign:\"center\"}}>{props.heading}</h2>\r\n             {/* <NumberFormat className=\"cardfigures\" thousandSeparator={true} value={props.count} disabled={true}></NumberFormat>  */}\r\n            <h2>{props.count}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\nfunction Totaldemo() {\r\n\r\n    const [data, setData] = useState([])\r\n    useEffect(() => {\r\n\r\n        fetch(\"https://corona.lmao.ninja/v2/countries?yesterday=0&sort=todayCases\", {\r\n            method: \"GET\"\r\n        }).then(res => res.json()).then((data) => { setData(data) })\r\n    }, [])\r\n\r\n    // console.log(data)\r\n    \r\n    // console.log(dict)\r\n    return (\r\n        <table>\r\n            \r\n            {data.map((country) =>\r\n                <tr key={country.countryInfo.iso2}>\r\n                    <td><img src={country.countryInfo.flag} style={{height:\"10px\",width:\"14px\"}} alt=\"flag\"></img>  {country.country}</td>\r\n                    <td>{country.todayCases}</td></tr>\r\n            )\r\n            }\r\n            </table>\r\n    )\r\n\r\n}\r\n\r\nexport default Totaldemo\r\n","import styled, { ThemeProvider } from 'styled-components';\nimport { lightTheme, darktheme, GlobalStyles } from './themes'\nimport { useState, useEffect } from 'react';\nimport GraphDemo from './components/GraphDemo'\nimport Map from './components/Map'\nimport TotalCases from './components/TotalCases'\nimport TotalDeaths from './components/TotalDeaths'\nimport Cards from './components/Cards'\nimport NumberFormat from 'react-number-format';\nimport \"leaflet/dist/leaflet.css\"\nimport Totaldemo from './components/Tabledemo'\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons'\nimport { faGithub , faLinkedin} from '@fortawesome/free-brands-svg-icons'\n\n\nconst StyledApp = styled.div`\nbackground : fixed;`\n// color : ${props => props.theme.fontColor};\n\n\n\nfunction App() {\n\n\n  const [theme, setTheme] = useState('dark');\n  const [datac, setDatac] = useState({});\n  const [mapCenter, setMapCenter] = useState({ lat: 0.80746, lng: -40.4796 })\n  const [mapZoom, setmapZoom] = useState(3);\n  const [list, setList] = useState([])\n  const [country, setCountry] = useState(\"\")\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [graph, setGraph] = useState({});\n\n\n  // console.log(list)\n  useEffect(() => {\n\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(res => res.json())\n      .then(data => { setDatac(data) })\n\n    setGraphData(\"\");\n\n    // console.log(datac)\n  }, [])\n\n\n  useEffect(() => {\n\n    fetch('https://disease.sh/v3/covid-19/countries')\n      .then(res => res.json())\n      .then(data => setList(data))\n\n\n  }, [])\n\n\n  const onCountryChange = async (e) => {\n\n    // console.log(mapCenter);\n    const country = e.target.value;\n    // console.log(country);\n    setSelectedCountry(country);\n    const url = \"https://disease.sh/v3/covid-19/countries/\" + country;\n    // console.log(url);\n\n    await fetch(url).then((res) => res.json())\n      .then(data => {\n        // console.log(data);\n        setMapCenter({ lat: data.countryInfo.lat, lng: data.countryInfo.long })\n        setmapZoom(4);\n        setDatac(data)\n        setCountry(data.country)\n        // console.log(datac)      \n      })\n    setGraphData(country);\n  }\n\n  const setGraphData = async (country) => {\n\n    // console.log(country)\n    const urlgraph = `https://disease.sh/v3/covid-19/historical/${country == \"\" ? \"all\" : country}`\n    // console.log(urlgraph);\n\n    await fetch(urlgraph)\n      .then(res => res.json())\n      .then((data) => {\n        setGraph(data)\n        console.log(graph)\n      })\n\n  }\n\n\n\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light');\n    // console.log(theme);\n  }\n\n\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darktheme}>\n      <GlobalStyles />\n      <StyledApp>\n        <header >\n          <h1 className=\"dbhead\">Covid-19 World Tracker</h1>\n          <label class=\"switch\" style={{marginRight:\"20px\"}}>\n            <input type=\"checkbox\"></input>\n            <span class=\"slider round\" onClick={() => themeToggler()}></span>\n          </label>\n        </header>\n\n\n        <div className=\"parentDiv\">\n          <div className=\"centerColumn\">\n            <div className=\"cardClass\">\n\n              <Cards heading=\"Total Cases\" count={<NumberFormat className=\"cardfigures\" thousandSeparator={true} value={datac.cases} disabled={true}></NumberFormat>} ></Cards>\n              <Cards heading=\"Total Recovered\" count={<NumberFormat className=\"cardfigures\" thousandSeparator={true} value={datac.recovered} disabled={true}></NumberFormat>}  ></Cards>\n              <Cards heading=\"Total Deaths\" count={<NumberFormat className=\"cardfigures\" thousandSeparator={true} value={datac.deaths} disabled={true}></NumberFormat>}></Cards>\n            </div>\n            <div className=\"centerClass\">\n              <div>\n                <select value={country.country} onChange={onCountryChange} >\n                  <option> Select Country</option>\n\n                  {list.map((element) =>\n                    <option key={element.countryInfo.iso} >{element.country}</option>\n                  )}\n                </select>\n              </div>\n              <Map\n                countries={list}\n                center={mapCenter}\n                zoom={mapZoom}\n                data={datac}\n              ></Map>\n\n\n            </div>\n          </div>\n\n\n          <div className=\"rightpane\">\n            <div>\n            <GraphDemo className=\"graph\" data={graph} country={selectedCountry}></GraphDemo>\n            </div>\n            {/* <GraphDemo data={country==\"\"?graph:graph['timeline']} country={selectedCountry}></GraphDemo> */} \n            <div className=\"tablediv\"> \n              <div className=\"caseTableContainer\">\n              <h1>Today Cases</h1>\n                <div className=\"casesTable\">\n                  <Totaldemo></Totaldemo>\n                </div>\n              </div>\n              <div className=\"caseTableContainer\">\n              <h1>Today Deaths</h1>\n              <div className=\"casesTable\">\n                <TotalDeaths></TotalDeaths>\n                </div>\n              </div> \n            </div>\n            \n          </div>\n        </div>\n\n        <footer>\n          <h2 style={{fontSize:\"25px\"}} >Creator :TG |@2021</h2>\n\n          <small style={{fontSize:\"15px\", margin:\"0px\" ,padding:\"0px\" }}>*****The data has been taken from the diseases.sh api*****</small>\n        <ul className=\"contact\">\n          <li><a href=\"https://github.com/TanyaGupta1901\"><FontAwesomeIcon color={theme=='light' ? \"cyan\" : \"#012C48\"} icon={faGithub}></FontAwesomeIcon></a></li>\n          <li><a href=\"https://www.linkedin.com/in/tanya-gupta-b40621197/\"><FontAwesomeIcon color={theme=='light' ? \"cyan\" : \"#012C48\"} icon={faLinkedin}></FontAwesomeIcon></a></li>\n          <li><a href=\"mailto:tgcommercial@gmail.com\"><FontAwesomeIcon color={theme=='light' ? \"cyan\" : \"#012C48\"} icon={faEnvelope}></FontAwesomeIcon></a></li>\n        </ul>\n        </footer>\n      </StyledApp>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}